name: Java CI Build and Quality Analysis

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read         # Permite leer el contenido del repositorio
  pages: write           # Permite publicar en GitHub Pages
  id-token: write        # Requerido para autenticación con el entorno de Pages
  
# Controla la ejecución concurrente del workflow:
# si hay uno en curso, se saltan los intermedios y se ejecuta solo el más reciente
concurrency:
  group: "pages"
  cancel-in-progress: false      

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:

        distribution: 'temurin'
        java-version: '17'
        cache: 'maven'

    - name: Build with Maven, Run Tests, and Generate Reports
      run: mvn clean verify


    # Ejecutar Checkstyle con manejo de errores
    - name: Run Checkstyle (style checker)
      run: |
        mvn checkstyle:checkstyle || \
        # Si aún falla, continuar sin fallar el build
        echo "Warning: Checkstyle failed but continuing build"
      continue-on-error: false

    # Ejecutar PMD con manejo de errores
    - name: Run PMD (code quality checker)
      run: |
        mvn pmd:check || \
        mvn pmd:pmd || \
        echo "Warning: PMD failed but continuing build"
      continue-on-error: false

    # Verificar que el directorio output existe
    - name: Create output directory
      run: |
          mkdir -p output

    - name: Generate static HTML with Java
      run: mvn exec:java -Dexec.mainClass="com.ejemplo.ReportesMain"

    - name: Copy quality reports to output (with CSS & images)
      run: |
        mkdir -p output/jacoco
        cp -r target/site/jacoco/* output/jacoco/
        cp target/site/checkstyle.html output/
        cp target/site/pmd.html output/
        cp -r target/site/css output/
        cp -r target/site/images output/

    - name: Upload JaCoCo Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-report
        path: target/site/jacoco/

    - name: Upload Checkstyle Report (HTML)
      uses: actions/upload-artifact@v4
      with:
        name: checkstyle-report
        path: target/site/checkstyle.html

    - name: Upload PMD Report (HTML)
      uses: actions/upload-artifact@v4
      with:
        name: pmd-report
        path: target/site/pmd.html

    # Paso 5: Prepara GitHub Pages para recibir los archivos
    - name: Setup Pages
      uses: actions/configure-pages@v5

    # Paso 6: Carga el contenido de la carpeta "output" como artefacto para Pages
    # Solo esta carpeta será publicada
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: 'output'

  # Job separado para el despliegue
  deploy:
    needs: build-and-analyze  # Este job se ejecuta solo si el job "build" fue exitoso
    runs-on: ubuntu-latest
    environment:
      name: github-pages  # Define el entorno de despliegue para Pages
      url: ${{ steps.deployment.outputs.page_url }}  # Expone la URL pública como variable

    steps:
      # Paso final: despliega el artefacto a GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
